name: Build

on: [push,pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Discover cores
      if: ${{ matrix.os != 'macos-latest' }}
      run: lscpu | egrep 'Model name|Socket|Thread|NUMA|CPU\(s\)'

    # Build machines don't have arm-none-eabi gcc, so let's download it and put it on the path
    - name: Download & Install GCC
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: | # Compiler hosted on our other git repo - avoids having to download from the nice folks at ARM every time
        wget 'https://github.com/rusefi/build_support/raw/master/gcc-arm-none-eabi-9-2020-q2-update-x86_64-linux.tar.xz' -O compiler.tar.xz
        tar -xvf compiler.tar.xz
        echo "::add-path::`pwd`/gcc-arm-none-eabi-9-2020-q2-update/bin"

    # Make sure the compiler we just downloaded works - just print out the version
    - name: Test Compiler
      run: arm-none-eabi-gcc -v


    - name: Build Tests
      working-directory: .
      run: make -j4
      
